{"mappings":"AAEA,SAASA,eACP,IAAMC,EAAWC,SAASC,iBAAiB,YACrCC,EAAQF,SAASC,iBAAiB,qBAElCE,EAAW,IAAIC,sBACnB,SAAAC,GACEA,EAAQC,SAAQ,SAAAC,GACVA,EAAMC,gBACRN,EAAMI,SAAQ,SAAAG,G,IACKC,GAAyB,QAAzBA,EAAAD,EAAKE,aAAa,eAAO,IAAzBD,OAAA,EAAAA,EAA2BE,QAAQ,IAAK,OACxCL,EAAMM,OAAOC,GAC5BL,EAAKM,UAAUC,IAAI,UAEnBP,EAAKM,UAAUE,OAAO,S,SAMhC,CACEC,UAAW,KAIfnB,EAASO,SAAQ,SAAAa,GACfhB,EAASiB,QAAQD,E,IAIrBrB","sources":["src/js/main.js"],"sourcesContent":["//Event on Scroll\n\nfunction scrollEvents() {\n  const sections = document.querySelectorAll('.section');\n  const links = document.querySelectorAll('.descrip-btn-item');\n\n  const observer = new IntersectionObserver(\n    entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          links.forEach(link => {\n            const linkHref = link.getAttribute('href')?.replace('#', '');\n            if (linkHref === entry.target.id) {\n              link.classList.add('active');\n            } else {\n              link.classList.remove('active');\n            }\n          });\n        }\n      });\n    },\n    {\n      threshold: 0.7,\n    }\n  );\n\n  sections.forEach(section => {\n    observer.observe(section);\n  });\n}\n\nscrollEvents();\n"],"names":["scrollEvents","sections","document","querySelectorAll","links","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","link","ref","getAttribute","replace","target","id","classList","add","remove","threshold","section","observe"],"version":3,"file":"index.9d3c4dc5.js.map"}